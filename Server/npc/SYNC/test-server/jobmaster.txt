prontera,140,164,6	script	3rd Class Job Changer::3rdjob	459,{

	set .@name$,"[Third Job Changer]";

	mes .@name$;
	mes "Hello " + strcharinfo(0) + ", i can change you to the 3rd Class.";
	mes "So, which Class would you like to be?";
	next;
	if ((BaseLevel != 99) && (JobLevel != 70)) goto L_level;
	menu "Rune Knight",-,"Guillotine Cross",L_1,"Ranger",L_2,"Warlock",L_3,"Archbishop",L_4,"Mechanic",L_5,"Royal Guard",L_6,"Shadow Chaser",L_7,"Minstrel",L_8,"Wanderer",L_9,"Sorcerer",L_10,"Sura",L_11,"Genetic",L_12,"Cancel",L_End;

	mes .@name$;
	mes "So you would like to change to an Rune Knight?";
	next;
	menu "Yes",-,"No",L_End;
	
	if (Weight > 20000) goto LWeight;
    if ((Class == 4014) && (Class == 4022)) goto Lpeco;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4008) && (Class != 7)) goto L_cant;
	
	if (class == 4008) {
	set JobLevel, 1;
	jobchange 4060;
	} else if (class == 7) {
	set JobLevel, 1;
	jobchange 4054;
	}

	mes .@name$;
	mes "Congratulations! You're now an Rune Knight !!";
	close;

L_1:
	mes .@name$;
	mes "So you would like to change to an Guillotine Cross?";
	next;
	menu "Yes",-,"No",L_End;
		
	if (Weight > 20000) goto LWeight;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4013) && (Class != 12)) goto L_cant;
	
	if (class == 4013) {
	set JobLevel, 1;
	jobchange 4065;
	} else if (class == 12) {
	set JobLevel, 1;
	jobchange 4059;
	}
	
	mes .@name$;
	mes "Congratulations! You're now an Guillotine Cross !!";
	close;

L_2:
	mes .@name$;
	mes "So you would like to change to an Ranger?";
	next;
	menu "Yes",-,"No",L_End;

	if (Weight > 20000) goto LWeight;
    if (checkfalcon() != 0) goto LFalcon;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4012) && (Class != 11)) goto L_cant;
	
	if (class == 4012) {
	set JobLevel, 1;
	getitem 6124,1;
	jobchange 4062;
	} else if (class == 11) {
	set JobLevel, 1;
	getitem 6124,1;
	jobchange 4056;
	}

	mes .@name$;
	mes "Congratulations! You're now an Ranger !!";
	close;

L_3:
	mes .@name$;
	mes "So you would like to change to an Warlock?";
	next;
	menu "Yes",-,"No",L_End;
	
	if (Weight > 20000) goto LWeight;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4010) && (Class != 9)) goto L_cant;
	
	if (class == 4010) {
	set JobLevel, 1;
	jobchange 4061;
	} else if (class == 9) {
	set JobLevel, 1;
	jobchange 4055;
	}
	
	mes .@name$;
	mes "Congratulations! You're now an Warlock !!";
	close;
   
L_4:
	mes .@name$;
	mes "So you would like to change to an Arc Bishop?";
	next;
	menu "Yes",-,"No",L_End;
	
	if (Weight > 20000) goto LWeight;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4009) && (Class != 8)) goto L_cant;
	
	if (class == 4009) {
	set JobLevel, 1;
	jobchange 4063;
	} else if (class == 8) {
	set JobLevel, 1;
	jobchange 4057;
	}
	
	mes .@name$;
	mes "Congratulations! You're now an Arc Bishop !!";
	close;
  
L_5:
	mes .@name$;
	mes "So you would like to change to an Mechanic?";
	next;
	menu "Yes",-,"No",L_End;

	if (Weight > 20000) goto LWeight;
    if (checkcart() != 0) goto LCart;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4011) && (Class != 5)) goto L_cant;
	
	if (class == 4011) {
	set JobLevel, 1;
	jobchange 4064;
	} else if (class == 5) {
	set JobLevel, 1;
	jobchange 4058;
	}

	mes .@name$;
	mes "Congratulations! You're now an Mechanic !!";
	close;

L_6:
	mes .@name$;
	mes "So you would like to change to an Royal Guard?";
	next;
	menu "Yes",-,"No",L_End;
	
	if (Weight > 20000) goto LWeight;
    if ((Class == 4014) && (Class == 4022)) goto Lpeco;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4015) && (Class != 14)) goto L_cant;
	
	if (class == 4015) {
	set JobLevel, 1;
	jobchange 4073;
	} else if (class == 14) {
	set JobLevel, 1;
	jobchange 4066;
	}

	mes .@name$;
	mes "Congratulations! You're now an Royal Guard !!";
	close;

L_7:
	mes .@name$;
	mes "So you would like to change to an Shadow Chaser?";
	next;
	menu "Yes",-,"No",L_End;
		
	if (Weight > 20000) goto LWeight;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4018) && (Class != 17)) goto L_cant;
	
	if (class == 4018) {
	set JobLevel, 1;
	jobchange 4079;
	} else if (class == 17) {
	set JobLevel, 1;
	jobchange 4072;
	}

	mes .@name$;
	mes "Congratulations! You're now an Shadow Chaser !!";
	close;

L_8:
	mes .@name$;
	mes "So you would like to change to an Minstrell?";
	next;
	menu "Yes",-,"No",L_End;
	
	if (Weight > 20000) goto LWeight;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4020) && (Class != 19)) goto L_cant;
	
	if (class == 4020) {
	set JobLevel, 1;
	jobchange 4075;
	} else if (class == 19) {
	set JobLevel, 1;
	jobchange 4068;
	}
	
	mes .@name$;
	mes "Congratulations! You're now an Minstrell !!";
	close;

L_9:
	mes .@name$;
	mes "So you would like to change to an Wanderer?";
	next;
	menu "Yes",-,"No",L_End;

	if (Weight > 20000) goto LWeight;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4021) && (Class != 20)) goto L_cant;
	
	if (class == 4021) {
	set JobLevel, 1;
	jobchange 4076;
	} else if (class == 20) {
	set JobLevel, 1;
	jobchange 4069;
	}
	
	mes .@name$;
	mes "Congratulations! You're now an Wanderer !!";
	close;

L_10:
	mes .@name$;
	mes "So you would like to change to an Sorcerer?";
	next;
	menu "Yes",-,"No",L_End;

	if (Weight > 20000) goto LWeight;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4017) && (Class != 16)) goto L_cant;
	
	if (class == 4017) {
	set JobLevel, 1;
	jobchange 4074;
	} else if (class == 16) {
	set JobLevel, 1;
	jobchange 4067;
	}

	mes .@name$;
	mes "Congratulations! You're now an Sorcerer !!";
	close;

L_11:
	mes .@name$;
	mes "So you would like to change to an Sura?";
	next;
	menu "Yes",-,"No",L_End;
	
	if (Weight > 20000) goto LWeight;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4016) && (Class != 15)) goto L_cant;
	
	if (class == 4016) {
	set JobLevel, 1;
	jobchange 4077;
	} else if (class == 15) {
	set JobLevel, 1;
	jobchange 4070;
	}
	
	mes .@name$;
	mes "Congratulations! You're now an Sura !!";
	close;

L_12:
	mes .@name$;
	mes "So you would like to change to an Genetic?";
	next;
	menu "Yes",-,"No",L_End;

	if (Weight > 20000) goto LWeight;
    if (checkcart() != 0) goto LCart;
	if(SkillPoint > 0) goto LSkillPoints;
	
	if ((Class != 4019) && (Class != 18)) goto L_cant;
	
	if (class == 4019) {
	set JobLevel, 1;
	jobchange 4078;
	} else if (class == 18) {
	set JobLevel, 1;
	jobchange 4071;
	}
	
	mes .@name$;
	mes "Congratulations! You're now an Genetic !!";
	close;
	
L_level:
	mes "Sorry, but make soure that you're";
	mes "Base Lvl. 99 / Job Lvl. 70 and set all your Skillpoints.";
	close;
	
L_cant:
	mes "Sorry, but you can't change from that Class!";
	close;
	
LWeight:
	mes "Sorry, but you're overweight,";
	mes "please put first some of yout Items into your storage.";
	close;
	
Lpeco:
	mes "Please release your Pecopeco first.";
	close;
	
LCart:
	mes "Please put your Cart off first.";
	close;
	
LFalcon:
	mes "Please release your Falcon first.";
	close;
	
LSkillPoints:
    mes "Please distribute all your Skillpoints,";
    mes "otherweise i can't let you change.";
    close;
	
L_End:
	mes "Bye.";
	close;
}


//===== eAthena Script =======================================
//= eAthena Jobchanger AKA Job Master
//===== By: ==================================================
//= eAthena Dev Team [Ori:LunatikBunnie] [Cur:Lance]
//===== Current Version: =====================================
//= 1.5a
//===== Compatible With: =====================================
//= eAthena SVN Trunk 6674
//===== Description: =========================================
//= Changes your job without asking too much
//= For other info, please contact me at Lunatikbunnie@gmail.com 
//= Editted menu to avoid button mashing.
//= 1.3 Added TK/SL/SG, thanks to Haplo. Fixed minor bugs [Lupus]
//=    script leaves grabage variable: 'lastJob'
//= 1.4 Added NJ/GS, changed all job numbers to Job_* constants. 
//=    All credits go to pxxx [Skotlex]
//= 1.5 Rewrite everything from scratch. [Lance]
//= 1.5a fixed Baby -> Super Baby change. Switched to JobName() [Lupus]
//============================================================
prontera,140,170,6	script	Job Master	123,{
	mes "^ff0000[Job Master]^000000";
	if(Upper == 1 && Class >= Job_Lord_Knight) goto L_noReq;
	if(SkillPoint != 0){
		mes "Lo siento, tiene que usar todos sus puntos de skill antes de cambiar de job.";
		mes "¡Por favor vuelva pronto!";
		close;
	}
	if(JobLevel < 10) goto L_LvError;
	switch(Class){
		case Job_Novice_High:
		case Job_Baby:
		case Job_Novice:
			skill 142,1,0;
			skill 143,1,0;
			mes "Bienvenido, por favor seleccione el job al que desearía cambiar";
			if(lastJob != 0 && Class == Job_Novice_High){
				switch(lastJob){
					case Job_Knight:
					case Job_Crusader:
						set @target_job, Job_Swordman_High;
						break;
					case Job_Monk:
					case Job_Priest:
						set @target_job, Job_Acolyte_High;
						break;
					case Job_Alchemist:
					case Job_Blacksmith:
						set @target_job, Job_Merchant_High;
						break;
					case Job_Rogue:
					case Job_Assassin:
						set @target_job, Job_Thief_High;
						break;
					case Job_Wizard:
					case Job_Sage:
						set @target_job, Job_Mage_High;
						break;
					case Job_Hunter:
					case Job_Bard:
					case Job_Dancer:
						set @target_job, Job_Archer_High;
						break;
							}
			} else {
				switch(select("Swordsman","Mage","Archer","Acolyte","Merchant","Thief",
					"Super Novice","Taekwon","Gunslinger","Ninja")){
						case 7:
							if(Class == Job_Novice_High) goto L_noReq;
							if($@JC_SupNovM > BaseLevel) goto L_BvError;
							if(Upper == 2)
								set @target_job, Job_Super_Baby;
							else
								set @target_job, Job_SuperNovice;
							break;
						case 8:
							if(Class == Job_Novice_High) goto L_noReq;
							if(Upper == 2) goto L_noReq;
							set @target_job, Job_Taekwon;
							break;
						case 9:
						case 10:
							if(Class == Job_Novice_High || Upper == 2) goto L_noReq;
							set @target_job, @menu + 15;
							break;
						default:
							set @target_job, @menu;
							if(Class == Job_Novice_High) set @target_job, @target_job + 4001;
							break;
					}
			}
			mes "¿Está seguro de que desea cambiar? " + JobName(@target_job) + "?";
			if(select("No","Yes") == 2){
				callfunc "Job_Change", @target_job;
				if(@target_job == Job_Gunslinger || @target_job == Job_Ninja || @target_job == Job_Taekwon) {
					callfunc "F_ClearJobVar";
				} else {
					if($@JC_Plat) goto L_GivePlat;
				}
			}
			close;
			break;
		default:
			if(JobLevel < $@JC_MinimumJB) goto L_LvError;
			deletearray @job_opt, getarraysize(@job_opt);
			if(Class < Job_Knight || Class == Job_Taekwon || (Class > Job_Baby && Class < Job_Baby_Knight) || (Class > Job_Novice_High && Class < Job_Lord_Knight)){
				if(lastJob != 0){
					set @target_job, lastJob + 4001;
				} else {
					switch(Class){
						case Job_Swordman_High:
						case Job_Baby_Swordman:
						case Job_Swordman:
							set @job_opt[0], Job_Knight;
							set @job_opt[1], Job_Crusader;
							break;
						case Job_Mage_High:
						case Job_Baby_Mage:
						case Job_Mage:
							set @job_opt[0], Job_Wizard;
							set @job_opt[1], Job_Sage;
							break;
						case Job_Archer_High:
						case Job_Baby_Archer:
						case Job_Archer:
							set @job_opt[0], Job_Hunter;
							if(Sex == 0)
								set @job_opt[1], Job_Dancer;
							else
								set @job_opt[1], Job_Bard;
							break;
						case Job_Acolyte_High:
						case Job_Baby_Acolyte:
						case Job_Acolyte:
							set @job_opt[0], Job_Priest;
							set @job_opt[1], Job_Monk;
							break;
						case Job_Merchant_High:
						case Job_Baby_Merchant:
						case Job_Merchant:
							set @job_opt[0], Job_Blacksmith;
							set @job_opt[1], Job_Alchemist;
							break;
						case Job_Thief_High:
						case Job_Baby_Thief:
						case Job_Thief:
							set @job_opt[0], Job_Assassin;
							set @job_opt[1], Job_Rogue;
							break;						
						default:
							set @job_opt[0], Job_Star_Gladiator;
							set @job_opt[1], Job_Soul_Linker;
							break;
					}
					mes "Bienvenido, por favor seleccione el job al que desearía cambiar";
					set @target_job, @job_opt[select(JobName(@job_opt[0]), JobName(@job_opt[1]))-1];
					if(Class > Job_Novice_High && Class < Job_Lord_Knight) set @target_job, @target_job + 4001;
				}
				mes "¿Está seguro de que desea cambiar? " + JobName(@target_job) + "?";
				if(select("No","Yes")==2){
					callfunc "Job_Change", @target_job;
					if(@target_job == Job_Star_Gladiator || @target_job == Job_Soul_Linker) {
						callfunc "F_ClearJobVar";
					} else {
						if($@JC_Plat) goto L_GivePlat;
					}
				}
				close;
			}
			if(checkfalcon() || checkcart() || checkriding()) goto L_remove;
			if((Class >=Job_Knight) && (Class <=Job_Crusader2)){
				mes "¿Desea renacer?";
				if(select("Yes","No")==1){
					if(BaseLevel < 99 || JobLevel < 50) goto L_cantCh;
					set lastJob, Class;
					if(Class == Job_Knight2){
						set lastJob, Job_Knight;
					} else {
						if(Class == Job_Crusader2){
							set lastJob, Job_Crusader;
						}
					}
					jobchange Job_Novice_High;
					resetlvl(1);
					skill 142,1,0;
					skill 143,1,0;
				}
				close;
			}
	}
	mes "Lo siento, ya no hay clases posteriores para tu job.";
	close;

L_GivePlat:
	if (BaseClass==Job_SuperNovice) goto L_sSuperN;
	if (BaseClass==Job_Swordman) goto L_sSword;
	if (BaseClass==Job_Mage) goto L_sMage;
	if (BaseClass==Job_Archer) goto L_sArcher;
	if (BaseClass==Job_Acolyte) goto L_sAcolyte;
	if (BaseClass==Job_Merchant) goto L_sMerchant;
	if (BaseClass==Job_Thief) goto L_sThief;
	close;
L_sSuperN:
	skill 142,1,0;
	close;
L_sSword:
	skill 142,1,0;
	skill 144,1,0;
	skill 145,1,0;
	skill 146,1,0;
	close;
L_sMage:
	skill 142,1,0;
	skill 157,1,0;
	close;
L_sArcher:
	skill 142,1,0;
	skill 147,1,0;
	skill 148,1,0;
	close;
L_sAcolyte:
	skill 142,1,0;
	skill 156,1,0;
	close;
L_sMerchant:
	skill 142,1,0;
	skill 153,1,0;
	skill 154,1,0;
	skill 155,1,0;
	close;
L_sThief:
	skill 142,1,0;
	skill 149,1,0;
	skill 150,1,0;
	skill 151,1,0;
	skill 152,1,0;
	close;

L_cantCh:
	mes "Lo siento, no cuenta con los requisitos para cambiar.";
	mes "¡Por favor vuelva pronto!";
	close;

L_LvError:
	mes "Lo siento, no tiene suficiente nivel de job.";
	mes "¡Por favor vuelva pronto!";
	close;

L_BvError:
	mes "Lo siento, no tiene suficiente nivel base.";
	mes "¡Por favor vuelva pronto!";
	close;

L_noReq:
	mes "Lo siento, no cuenta con los requisitos para cambiar.";
	mes "¡Por favor vuelva pronto!";
	close;

L_remove:
	mes "Por favor, asegúrese de retirar el carro, halcón o peco.";
	mes "¡Por favor vuelva pronto!";
	close;

OnInit:
	// Variable Setup
	set $@JC_MinimumJB, 40; //Minimum job level for changing between 2nd and advance Class (Default : 40)
	set $@JC_Plat, 1; //Give Platinum skills on Jobchange (Default : 1-yes)
	set $@JC_SupNovM, 45; //Base Level to change into Super Novice (Default : 45)
	end;
}

