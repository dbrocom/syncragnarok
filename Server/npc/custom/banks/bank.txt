//===== eAthena Script ======================================= 
//= Banker Script 
//===== By: ================================================== 
//= Syrus22 (1.0)
//===== Current Version: ===================================== 
//= 1.0
//===== Compatible With: ===================================== 
//= Any eAthena version with Account variables.
//===== Description: ========================================= 
//= An account wide Banker to store Zeny
//===== Additional Comments: ================================= 
//= Syrus22 - There's an optional transaction fee at the top of
//= the script. To use it simply change the first set command
//= to set the cost variable to whatever you want the fee to be.
//============================================================ 
prontera,132,217,5	script	Banker	109,{
set @cost,500;
mes "[Banker]";
mes "Bienvenido al Primer Banco de Prontera. ¿En que puedo ayudarle?.";
next;
menu "Quiero hacer un depósito.",Ldeposit,"Quiero retirar zeny.",Lwithdrawl,"¿Cual es mi saldo actual?",Lbalance,"Cancelar.",Lcancel;

Ldeposit:
	mes "[Banker]";
	mes "Muy bien ... ¿Cuánto le gustaría depositar en la cuenta?. La cantidad máxima que puede depositar a la vez es 999999 Zeny.";
	next;
	if (@cost > 0) goto Ldepocost;
	goto Ldepocont;

	Ldepocost:
		mes "[Banker]";
		mes "Y por favor no olvide que hay una " + @cost + " comisión de zeny en todas las transacciones.";
		next;
		goto Ldepocont;

Ldepocont:
	input @deposit;
	if (@deposit < 1) goto Lrealamount;
	if (@deposit > Zeny) goto Lneedzeny;
	if (@deposit > (Zeny - @cost)) goto Lneedzeny2;
	set Zeny,Zeny - @deposit;
	set Zeny,Zeny - @cost;
	set #bankstorage,#bankstorage + @deposit;
	mes "[Banker]";
	mes "Muchas gracias... su zeny esta en buenas manos.";
	close;

Lwithdrawl:
	mes "[Banker]";
	mes "Muy bien... ¿Cuanto le gustaría retirar?. Recuerde que la cantidad máxima que puede retirar de una vez es 999,999 Zeny";
	next;
	if (@cost > 0) goto Lwithcost;
	goto Lwithcont;

	Lwithcost:
		mes "[Banker]";
		mes "Y por favor recuerde que hay una " + @cost + " comisión de zeny en todas las transacciones.";
		next;
		goto Lwithcont;

Lwithcont:
	input @withdrawl;
	if (@withdrawl < 1) goto Lrealamount;
	if (@withdrawl > #bankstorage) goto Lneedzeny3;
	if ((@cost > Zeny) && ((Zeny + @withdrawl) > @cost)) goto Lcostask; 
	if (@cost > Zeny) goto Lneedzeny2;
	goto Lwithcont2;

	Lcostask:
		mes "[Banker]";
		mes "Ahora no tienes el Zeny para pagar la transacción. ¿Te gustaría que tome el pago directamente de tu retiro?.";
		next;
		menu "Si por favor.",Lwithtake,"No gracias.",Lcancel;

	Lwithtake:
		mes "[Banker]";
		mes "Ok.";
		set @withdrawl,@withdrawl - @cost;
		set #bankstorage,#bankstorage - @cost;
		set @cost,0;
		next;
		goto Lwithcont2;

Lwithcont2:
	set Zeny,Zeny - @cost;
	set Zeny,Zeny + @withdrawl;
	set #bankstorage,#bankstorage - @withdrawl;
	mes "[Banker]";
	mes "Aqui esta su zeny. Que tenga un buen dia.";
	close;

Lbalance:
	mes "[Banker]";
	mes "Hmmmm déjeme comprobar el documento...";
	next;
	mes "*Susurro,Susurro*";
	next;
	mes "[Banker]";
	mes "Actualmente tiene " + #bankstorage + " zeny en su cuenta.";
	close;

Lrealamount:
	mes "[Banker]";
	mes "No bromee. La próxima vez pida una cantidad real.";
	close;

Lneedzeny:
	mes "[Banker]";
	mes "No tienes suficiente zeny para hacer un depósito.";
	close;

Lneedzeny2:
	mes "[Banker]";
	mes "No tiene suficiente zeny para cubrir la operación de pago.";
	close;

Lneedzeny3:
	mes "[Banker]";
	mes "No tiene suficiente zeny en su cuenta.";
	close;

Lcancel:
	mes "[Banker]";
	mes "Muy bien...vuelva pronto";
	close;
}
